package oop.abs.good;
			






public abstract class HeadStore { //추상메서드는 반드시 추상 클래스에 들어가야 한다. 
								  //즉, 메서드가 추상이면 반드시 클래스도 추상으로 표현 해야 한다.

	
	
	 /*
	 1.	추상 클래스의 메서드에 abstract라는 키워드는 붙이면 해당 메서드는 실체가 없는 추상 메서드가 되며
	 	
	 	이 메서드는 상속을 통해 자식 클래스에서 무조건 오버라이딩을 하도록 강요된다.
	 
	 2. 추상 메서드는 실체가 존재하지 않는 틀 역할을 하기 때문에 메서드의 바디({}) 부분이 없고
	 	
	 	세미 콜론으로 메서드 선언을 마감합니다.
	 
	 3. 일반 클래스에서는 추상 메서드를 선언 할 수 없다.
	 
	    추상 메서드가 하나라도 존재하는 경우에는 반드시 해당 클래스를 추상 클래스로 선언해야 한다.
	    
	 4. 추상 클래스에 추상 메서드만을 선언 할 필요는 없다.
	 
	 	일반 멤버변수 및 메서드도 얼마든지 선언이 가능하다.
	 */
	
	
	
	//추상메서드는 반드시 추상 클래스에 들어가야 한다. 즉, 메서드가 추상이면 반드시 클래스도 추상으로 표현 해야 한다.
	public abstract void orderApple();
	public abstract void orderBanana();
	public abstract void orderGrape();
	//이제 이것들을 상속 받게 뿌려주겠지? 가맹점들은 반드시 오버라이딩을 해야된다. 무조건 전부 채워야 객체가 생성 될 수 있다. (권유해서 말 안들으니 강제로)
	
	
	
	
	//추상클래스라고 추상메서드 만 가능 한 것이 아니다. 상속이 기본 베이스이기 때문에 일반 변수와 일반 메서드도 써도 된다.
	public int i;
	public void orderWaterMelon() {  
		System.out.println("수박 쥬스의 가격은 4000원 입니다.");
	}
	
	
	
	//아무튼 그럼 이제 자식쪽(가맹점)에서 오버라이딩 하지 않으면 객체가 생성 될 수 없는지 확인하러 가보자. SeoulStroe로 가자.
	
	
	
}
